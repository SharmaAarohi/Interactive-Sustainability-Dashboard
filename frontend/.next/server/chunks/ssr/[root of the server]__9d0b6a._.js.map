{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/pages/dashboard.tsx"],"sourcesContent":["// import Navbar from '../components/navbar'; \r\n// import styles from '../styles/dashboard.module.css';\r\n// import Link from 'next/link';\r\n// import { useRouter } from 'next/router';\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import InputForm from '../components/InputForm';\r\n// import MetricChart from '../components/MetricChart';\r\n// // import Comparison from '../components/Comparison';\r\n// import ExportButtons from '../components/ExportButtons';\r\n\r\n// // Define a type for the metric data\r\n// interface MetricData {\r\n//   year: string;\r\n//   month: string;\r\n//   carbonEmissions: number;\r\n//   waterUsage: number;\r\n//   wasteGenerated: number;\r\n// }\r\n\r\n\r\n// const DashboardPage: React.FC = () => {\r\n//   const router = useRouter();\r\n//   const [metrics, setMetrics] = useState<MetricData[]>([]); // State for storing user metrics\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  \r\n\r\n//   // useEffect(() => {\r\n//   //   const token = localStorage.getItem('token');\r\n//   //   console.log('Token on dashboard load:', token); // Log to verify token presence\r\n//   //   if (!token) {\r\n//   //     router.push('/login'); // Redirect if no token is present\r\n//   //   }\r\n//   // }, [router]);\r\n  \r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (!token) {\r\n//       router.push('/login');\r\n//     } else {\r\n//       setIsAuthenticated(true);\r\n//       // Load persisted data from localStorage or API if available\r\n//       const savedMetrics = localStorage.getItem('metrics');\r\n//       if (savedMetrics) setMetrics(JSON.parse(savedMetrics));\r\n//     }\r\n//   }, [router]);\r\n\r\n\r\n//     // Optional: Verify token by making a request to the protected backend route\r\n//   //   fetch('http://localhost:5000/auth/dashboard', {\r\n//   //     method: 'GET',\r\n//   //     headers: {\r\n//   //       Authorization: `Bearer ${token}`,\r\n//   //     },\r\n//   //   })\r\n//   //     .then((response) => {\r\n//   //       if (!response.ok) {\r\n//   //         throw new Error('Token is invalid');\r\n//   //       }\r\n//   //       setIsAuthenticated(true);\r\n//   //     })\r\n//   //     .catch((error) => {\r\n//   //       console.error(error);\r\n//   //       localStorage.removeItem('token');\r\n//   //       router.push('/login');\r\n//   //     });\r\n//   // }, [router]);\r\n\r\n//   // if (!isAuthenticated) {\r\n//   //   return <p>Loading...</p>; // Display a loading message until authentication is verified\r\n//   // }\r\n//   // Function to handle form data submission\r\n//   const handleFormSubmit = (newData: MetricData) => {\r\n//     const updatedMetrics = [...metrics, newData];\r\n//     setMetrics(updatedMetrics);\r\n//     localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n//   };\r\n\r\n//   const handleDeleteData = (start: string, end: string) => {\r\n//     const updatedMetrics = metrics.filter((metric) => {\r\n//       const metricDate = `${metric.year}-${metric.month}`;\r\n//       return metricDate < start || metricDate > end;\r\n//     });\r\n//     setMetrics(updatedMetrics);\r\n//     localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n//   };\r\n\r\n//   const handleFilterData = (start: string, end: string) => {\r\n//     const filteredMetrics = metrics.filter((metric) => {\r\n//       const metricDate = `${metric.year}-${metric.month}`;\r\n//       return metricDate >= start && metricDate <= end;\r\n//     });\r\n//     setFilteredMetrics(filteredMetrics);\r\n//   };  \r\n//   return (\r\n//     <div className={styles.dashboardContainer}>\r\n//       <Navbar />\r\n//       <div className={styles.container}>\r\n//         <InputForm onSubmit={handleFormSubmit} />\r\n        \r\n//         <div className={styles.metrics}>\r\n//           <MetricChart metrics={metrics} />\r\n//         </div>\r\n\r\n//         {/* <Comparison metrics={metrics} /> */}\r\n\r\n//         <ExportButtons metrics={metrics} />\r\n\r\n//         <div className={styles.navigation}>\r\n//           <Link href=\"/login\">\r\n//             <button onClick={() => localStorage.removeItem('token')}>\r\n//               Logout\r\n//             </button>\r\n//           </Link>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardPage;\r\n\r\n\r\nimport Navbar from '../components/navbar';\r\nimport styles from '../styles/dashboard.module.css';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport InputForm from '../components/InputForm';\r\nimport MetricChart from '../components/MetricChart';\r\nimport ExportButtons from '../components/ExportButtons';\r\nimport { MetricData } from '../types/MetricData';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [metrics, setMetrics] = useState<MetricData[]>([]);\r\n  const [filteredMetrics, setFilteredMetrics] = useState<MetricData[]>([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      router.push('/login');\r\n    } else {\r\n      setIsAuthenticated(true);\r\n      const savedMetrics = localStorage.getItem('metrics');\r\n      if (savedMetrics) setMetrics(JSON.parse(savedMetrics));\r\n    }\r\n  }, [router]);\r\n\r\n  const handleFormSubmit = (newData: MetricData) => {\r\n    const updatedMetrics = [...metrics, newData];\r\n    setMetrics(updatedMetrics);\r\n    localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n  };\r\n\r\n  const handleDeleteData = (start: string, end: string) => {\r\n    const updatedMetrics = metrics.filter((metric) => {\r\n      const metricDate = `${metric.year}-${metric.month}`;\r\n      return metricDate < start || metricDate > end;\r\n    });\r\n    setMetrics(updatedMetrics);\r\n    localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n  };\r\n\r\n  const handleFilterData = (start: string, end: string) => {\r\n    const filteredMetrics = metrics.filter((metric) => {\r\n      const metricDate = `${metric.year}-${metric.month}`;\r\n      return metricDate >= start && metricDate <= end;\r\n    });\r\n    setFilteredMetrics(filteredMetrics);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.dashboardContainer}>\r\n      <Navbar />\r\n      <div className={styles.container}>\r\n        <InputForm onSubmit={handleFormSubmit} />\r\n        \r\n        <div className={styles.metrics}>\r\n          <MetricChart metrics={filteredMetrics.length > 0 ? filteredMetrics : metrics} />\r\n        </div>\r\n\r\n        <ExportButtons metrics={metrics} />\r\n\r\n        <div className={styles.navigation}>\r\n          <Link href=\"/login\">\r\n            <button onClick={() => localStorage.removeItem('token')}>\r\n              Logout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}