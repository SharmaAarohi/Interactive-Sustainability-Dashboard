{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/styles/navbar.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"icon\": \"navbar-module__HNoFna__icon\",\n  \"logo\": \"navbar-module__HNoFna__logo\",\n  \"logoImage\": \"navbar-module__HNoFna__logoImage\",\n  \"navbar\": \"navbar-module__HNoFna__navbar\",\n  \"section\": \"navbar-module__HNoFna__section\",\n  \"version\": \"navbar-module__HNoFna__version\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/navbar.tsx"],"sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport styles from '../styles/navbar.module.css';\r\n\r\nconst navbar: React.FC = () => {\r\n  return (\r\n    <div className={styles.navbar}>\r\n      <div className={styles.logo}>\r\n        <img src=\"/img/oren-logo.jpg\" alt=\"Oren Logo\" className={styles.logoImage} /> {/* Use your logo image */}\r\n        <span className={styles.version}>v1.0.0</span>\r\n      </div>\r\n      \r\n      <div className={styles.section}>\r\n        <h3>CSO DEV COMPANY</h3>\r\n        <Link href=\"/dashboard\"><div className={styles.icon}>üè†<span> Dashboard</span></div></Link>\r\n        <Link href=\"/reports\"><div className={styles.icon}>üìÑ<span> Reports</span></div></Link>\r\n        <Link href=\"/scope3\"><div className={styles.icon}>üë•<span> Scope 3</span></div></Link>\r\n        <Link href=\"/goals\"><div className={styles.icon}>üéØ<span> Goals</span></div></Link>\r\n      </div>\r\n\r\n      <div className={styles.section}>\r\n        <h3>SUPPLY CHAIN</h3>\r\n        <Link href=\"/supply-dashboard\"><div className={styles.icon}>üè¢<span> Dashboard</span></div></Link>\r\n        <Link href=\"/assessments\"><div className={styles.icon}>üìä<span> Assessments</span></div></Link>\r\n      </div>\r\n\r\n      <div className={styles.section}>\r\n        <h3>SETTINGS</h3>\r\n        <Link href=\"/preferences\"><div className={styles.icon}>‚öô<span> Preferences</span></div></Link>\r\n        <Link href=\"/user-management\"><div className={styles.icon}>üìÑ<span> User Management</span></div></Link>\r\n        <Link href=\"/faqs\"><div className={styles.icon}>‚ùì<span> FAQs</span></div></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navbar;"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,SAAmB;IACvB,qBACE,uIAAC;QAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,MAAM;;0BAC3B,uIAAC;gBAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;kCACzB,uIAAC;wBAAI,KAAI;wBAAqB,KAAI;wBAAY,WAAW,4HAAA,CAAA,UAAM,CAAC,SAAS;;;;;;oBAAI;kCAC7E,uIAAC;wBAAK,WAAW,4HAAA,CAAA,UAAM,CAAC,OAAO;kCAAE;;;;;;;;;;;;0BAGnC,uIAAC;gBAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,OAAO;;kCAC5B,uIAAC;kCAAG;;;;;;kCACJ,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAa,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCAC7D,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAW,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCAC3D,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAU,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCAC1D,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAS,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;0BAG3D,uIAAC;gBAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,OAAO;;kCAC5B,uIAAC;kCAAG;;;;;;kCACJ,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAoB,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCACpE,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAe,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;0BAGjE,uIAAC;gBAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,OAAO;;kCAC5B,uIAAC;kCAAG;;;;;;kCACJ,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAe,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAC,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCAC9D,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAmB,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAE,uIAAC;8CAAK;;;;;;;;;;;;;;;;;kCACnE,uIAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;kCAAQ,cAAA,uIAAC;4BAAI,WAAW,4HAAA,CAAA,UAAM,CAAC,IAAI;;gCAAE;8CAAC,uIAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI/D;uCAEe"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/styles/dashboard.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"container\": \"dashboard-module__1qL-yq__container\",\n  \"dashboardContainer\": \"dashboard-module__1qL-yq__dashboardContainer\",\n  \"exportButtons\": \"dashboard-module__1qL-yq__exportButtons\",\n  \"formContainer\": \"dashboard-module__1qL-yq__formContainer\",\n  \"formSection\": \"dashboard-module__1qL-yq__formSection\",\n  \"logoutButton\": \"dashboard-module__1qL-yq__logoutButton\",\n  \"metrics\": \"dashboard-module__1qL-yq__metrics\",\n  \"title\": \"dashboard-module__1qL-yq__title\",\n  \"topButtons\": \"dashboard-module__1qL-yq__topButtons\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/DeleteDataForm.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// const months = [\r\n//     { value: '01', label: 'January' },\r\n//     { value: '02', label: 'February' },\r\n//     { value: '03', label: 'March' },\r\n//     { value: '04', label: 'April' },\r\n//     { value: '05', label: 'May' },\r\n//     { value: '06', label: 'June' },\r\n//     { value: '07', label: 'July' },\r\n//     { value: '08', label: 'August' },\r\n//     { value: '09', label: 'September' },\r\n//     { value: '10', label: 'October' },\r\n//     { value: '11', label: 'November' },\r\n//     { value: '12', label: 'December' }\r\n//   ];\r\n// const DeleteDataForm: React.FC<{ onDelete: (start: string, end: string) => void }> = ({ onDelete }) => {\r\n//   const [startMonth, setStartMonth] = useState('');\r\n//   const [startYear, setStartYear] = useState('');\r\n//   const [endMonth, setEndMonth] = useState('');\r\n//   const [endYear, setEndYear] = useState('');\r\n\r\n//   const handleDelete = (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     const startDate = `${startYear}-${startMonth}`;\r\n//     const endDate = `${endYear}-${endMonth}`;\r\n//     onDelete(startDate, endDate);\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleDelete}>\r\n//       <h4>Delete Data from Range</h4>\r\n//       <select value={startMonth} onChange={(e) => setStartMonth(e.target.value)} required>\r\n//         <option value=\"\">Start Month</option>\r\n//         {months.map((m) => (\r\n//           <option key={m.value} value={m.value}>{m.label}</option>\r\n//         ))}\r\n//       </select>\r\n//       <input type=\"number\" placeholder=\"Start Year\" value={startYear} onChange={(e) => setStartYear(e.target.value)} required />\r\n      \r\n//       <select value={endMonth} onChange={(e) => setEndMonth(e.target.value)} required>\r\n//         <option value=\"\">End Month</option>\r\n//         {months.map((m) => (\r\n//           <option key={m.value} value={m.value}>{m.label}</option>\r\n//         ))}\r\n//       </select>\r\n//       <input type=\"number\" placeholder=\"End Year\" value={endYear} onChange={(e) => setEndYear(e.target.value)} required />\r\n      \r\n//       <button type=\"submit\">Delete Data</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default DeleteDataForm;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst months = [\r\n  { value: '01', label: 'January' },\r\n  { value: '02', label: 'February' },\r\n  { value: '03', label: 'March' },\r\n  { value: '04', label: 'April' },\r\n  { value: '05', label: 'May' },\r\n  { value: '06', label: 'June' },\r\n  { value: '07', label: 'July' },\r\n  { value: '08', label: 'August' },\r\n  { value: '09', label: 'September' },\r\n  { value: '10', label: 'October' },\r\n  { value: '11', label: 'November' },\r\n  { value: '12', label: 'December' }\r\n];\r\n\r\ninterface DeleteDataFormProps {\r\n  onDelete: (start: string, end: string) => void;\r\n  onDeleteAll: () => void;\r\n}\r\n\r\nconst DeleteDataForm: React.FC<DeleteDataFormProps> = ({ onDelete, onDeleteAll }) => {\r\n  const [startMonth, setStartMonth] = useState('');\r\n  const [startYear, setStartYear] = useState('');\r\n  const [endMonth, setEndMonth] = useState('');\r\n  const [endYear, setEndYear] = useState('');\r\n\r\n  const handleDelete = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const startDate = `${startYear}-${startMonth}`;\r\n    const endDate = `${endYear}-${endMonth}`;\r\n    onDelete(startDate, endDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleDelete}>\r\n        <h4>Delete Data from Range</h4>\r\n        <select value={startMonth} onChange={(e) => setStartMonth(e.target.value)} required>\r\n          <option value=\"\">Start Month</option>\r\n          {months.map((m) => (\r\n            <option key={m.value} value={m.value}>{m.label}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Start Year\"\r\n          value={startYear}\r\n          onChange={(e) => setStartYear(e.target.value)}\r\n          required\r\n        />\r\n        <p></p>\r\n        <select value={endMonth} onChange={(e) => setEndMonth(e.target.value)} required>\r\n          <option value=\"\">End Month</option>\r\n          {months.map((m) => (\r\n            <option key={m.value} value={m.value}>{m.label}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"End Year\"\r\n          value={endYear}\r\n          onChange={(e) => setEndYear(e.target.value)}\r\n          required\r\n        />\r\n        <p></p>\r\n        <button type=\"submit\">Delete Data</button>\r\n      </form>\r\n      <p></p>\r\n      {/* Add a separate button to remove all data */}\r\n      <button onClick={onDeleteAll} style={{ marginTop: '1rem', backgroundColor: 'red', color: 'white' }}>\r\n        Remove All Data\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteDataForm;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 694, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/ViewRangeForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nconst months = [\r\n    { value: '01', label: 'January' },\r\n    { value: '02', label: 'February' },\r\n    { value: '03', label: 'March' },\r\n    { value: '04', label: 'April' },\r\n    { value: '05', label: 'May' },\r\n    { value: '06', label: 'June' },\r\n    { value: '07', label: 'July' },\r\n    { value: '08', label: 'August' },\r\n    { value: '09', label: 'September' },\r\n    { value: '10', label: 'October' },\r\n    { value: '11', label: 'November' },\r\n    { value: '12', label: 'December' }\r\n  ];\r\nconst ViewRangeForm: React.FC<{ onFilter: (start: string, end: string) => void }> = ({ onFilter }) => {\r\n  const [startMonth, setStartMonth] = useState('');\r\n  const [startYear, setStartYear] = useState('');\r\n  const [endMonth, setEndMonth] = useState('');\r\n  const [endYear, setEndYear] = useState('');\r\n\r\n  const handleFilter = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const startDate = `${startYear}-${startMonth}`;\r\n    const endDate = `${endYear}-${endMonth}`;\r\n    onFilter(startDate, endDate);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFilter}>\r\n      <h4>View Data from Range</h4>\r\n      <select value={startMonth} onChange={(e) => setStartMonth(e.target.value)} required>\r\n        <option value=\"\">Start Month</option>\r\n        {months.map((m) => (\r\n          <option key={m.value} value={m.value}>{m.label}</option>\r\n        ))}\r\n      </select>\r\n      <input type=\"number\" placeholder=\"Start Year\" value={startYear} onChange={(e) => setStartYear(e.target.value)} required />\r\n      <p></p>\r\n      <select value={endMonth} onChange={(e) => setEndMonth(e.target.value)} required>\r\n        <option value=\"\">End Month</option>\r\n        {months.map((m) => (\r\n          <option key={m.value} value={m.value}>{m.label}</option>\r\n        ))}\r\n      </select>\r\n      <input type=\"number\" placeholder=\"End Year\" value={endYear} onChange={(e) => setEndYear(e.target.value)} required />\r\n      <p></p>\r\n      <button type=\"submit\">View Data</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ViewRangeForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;AACA,MAAM,SAAS;IACX;QAAE,OAAO;QAAM,OAAO;IAAU;IAChC;QAAE,OAAO;QAAM,OAAO;IAAW;IACjC;QAAE,OAAO;QAAM,OAAO;IAAQ;IAC9B;QAAE,OAAO;QAAM,OAAO;IAAQ;IAC9B;QAAE,OAAO;QAAM,OAAO;IAAM;IAC5B;QAAE,OAAO;QAAM,OAAO;IAAO;IAC7B;QAAE,OAAO;QAAM,OAAO;IAAO;IAC7B;QAAE,OAAO;QAAM,OAAO;IAAS;IAC/B;QAAE,OAAO;QAAM,OAAO;IAAY;IAClC;QAAE,OAAO;QAAM,OAAO;IAAU;IAChC;QAAE,OAAO;QAAM,OAAO;IAAW;IACjC;QAAE,OAAO;QAAM,OAAO;IAAW;CAClC;AACH,MAAM,gBAA8E,CAAC,EAAE,QAAQ,EAAE;IAC/F,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,MAAM,YAAY,GAAG,UAAU,CAAC,EAAE,YAAY;QAC9C,MAAM,UAAU,GAAG,QAAQ,CAAC,EAAE,UAAU;QACxC,SAAS,WAAW;IACtB;IAEA,qBACE,uIAAC;QAAK,UAAU;;0BACd,uIAAC;0BAAG;;;;;;0BACJ,uIAAC;gBAAO,OAAO;gBAAY,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;kCACjF,uIAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,OAAO,GAAG,CAAC,CAAC,kBACX,uIAAC;4BAAqB,OAAO,EAAE,KAAK;sCAAG,EAAE,KAAK;2BAAjC,EAAE,KAAK;;;;;;;;;;;0BAGxB,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAAa,OAAO;gBAAW,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BACvH,uIAAC;;;;;0BACD,uIAAC;gBAAO,OAAO;gBAAU,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;kCAC7E,uIAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,OAAO,GAAG,CAAC,CAAC,kBACX,uIAAC;4BAAqB,OAAO,EAAE,KAAK;sCAAG,EAAE,KAAK;2BAAjC,EAAE,KAAK;;;;;;;;;;;0BAGxB,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAAW,OAAO;gBAAS,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BACjH,uIAAC;;;;;0BACD,uIAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;uCAEe"}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/InputForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst months = [\r\n  { value: '01', label: 'January' },\r\n  { value: '02', label: 'February' },\r\n  { value: '03', label: 'March' },\r\n  { value: '04', label: 'April' },\r\n  { value: '05', label: 'May' },\r\n  { value: '06', label: 'June' },\r\n  { value: '07', label: 'July' },\r\n  { value: '08', label: 'August' },\r\n  { value: '09', label: 'September' },\r\n  { value: '10', label: 'October' },\r\n  { value: '11', label: 'November' },\r\n  { value: '12', label: 'December' }\r\n];\r\n\r\nconst InputForm: React.FC<{ onSubmit: (data: any) => void }> = ({ onSubmit }) => {\r\n  const [year, setYear] = useState('');\r\n  const [month, setMonth] = useState('');\r\n  const [carbonEmissions, setCarbonEmissions] = useState('');\r\n  const [waterUsage, setWaterUsage] = useState('');\r\n  const [wasteGenerated, setWasteGenerated] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const data = { year, month, carbonEmissions: parseFloat(carbonEmissions), waterUsage: parseFloat(waterUsage), wasteGenerated: parseFloat(wasteGenerated) };\r\n    onSubmit(data);\r\n    setYear('');\r\n    setMonth('');\r\n    setCarbonEmissions('');\r\n    setWaterUsage('');\r\n    setWasteGenerated('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <h4>Input data</h4>\r\n      <select value={month} onChange={(e) => setMonth(e.target.value)} required>\r\n        <option value=\"\">Select Month</option>\r\n        {months.map((m) => (\r\n          <option key={m.value} value={m.value}>{m.label}</option>\r\n        ))}\r\n      </select>\r\n      <input type=\"number\" placeholder=\"Year\" value={year} onChange={(e) => setYear(e.target.value)} required />\r\n      <p></p>\r\n      <input type=\"number\" placeholder=\"Carbon Emissions (kilo-tons)\" value={carbonEmissions} onChange={(e) => setCarbonEmissions(e.target.value)} required />\r\n      <p></p>\r\n      <input type=\"number\" placeholder=\"Water Usage (million-liters)\" value={waterUsage} onChange={(e) => setWaterUsage(e.target.value)} required />\r\n      <p></p>\r\n      <input type=\"number\" placeholder=\"Waste Generated (tons)\" value={wasteGenerated} onChange={(e) => setWasteGenerated(e.target.value)} required />\r\n      <p></p>\r\n      <button type=\"submit\">Add Data</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,SAAS;IACb;QAAE,OAAO;QAAM,OAAO;IAAU;IAChC;QAAE,OAAO;QAAM,OAAO;IAAW;IACjC;QAAE,OAAO;QAAM,OAAO;IAAQ;IAC9B;QAAE,OAAO;QAAM,OAAO;IAAQ;IAC9B;QAAE,OAAO;QAAM,OAAO;IAAM;IAC5B;QAAE,OAAO;QAAM,OAAO;IAAO;IAC7B;QAAE,OAAO;QAAM,OAAO;IAAO;IAC7B;QAAE,OAAO;QAAM,OAAO;IAAS;IAC/B;QAAE,OAAO;QAAM,OAAO;IAAY;IAClC;QAAE,OAAO;QAAM,OAAO;IAAU;IAChC;QAAE,OAAO;QAAM,OAAO;IAAW;IACjC;QAAE,OAAO;QAAM,OAAO;IAAW;CAClC;AAED,MAAM,YAAyD,CAAC,EAAE,QAAQ,EAAE;IAC1E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,8FAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,MAAM,OAAO;YAAE;YAAM;YAAO,iBAAiB,WAAW;YAAkB,YAAY,WAAW;YAAa,gBAAgB,WAAW;QAAgB;QACzJ,SAAS;QACT,QAAQ;QACR,SAAS;QACT,mBAAmB;QACnB,cAAc;QACd,kBAAkB;IACpB;IAEA,qBACE,uIAAC;QAAK,UAAU;;0BACZ,uIAAC;0BAAG;;;;;;0BACN,uIAAC;gBAAO,OAAO;gBAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;kCACvE,uIAAC;wBAAO,OAAM;kCAAG;;;;;;oBAChB,OAAO,GAAG,CAAC,CAAC,kBACX,uIAAC;4BAAqB,OAAO,EAAE,KAAK;sCAAG,EAAE,KAAK;2BAAjC,EAAE,KAAK;;;;;;;;;;;0BAGxB,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAAO,OAAO;gBAAM,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BACvG,uIAAC;;;;;0BACD,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAA+B,OAAO;gBAAiB,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BACrJ,uIAAC;;;;;0BACD,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAA+B,OAAO;gBAAY,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BAC3I,uIAAC;;;;;0BACD,uIAAC;gBAAM,MAAK;gBAAS,aAAY;gBAAyB,OAAO;gBAAgB,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;gBAAG,QAAQ;;;;;;0BAC7I,uIAAC;;;;;0BACD,uIAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;uCAEe"}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/MetricChart.tsx"],"sourcesContent":["// import React from 'react';\r\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// interface MetricData {\r\n//   year: string;\r\n//   month: string;\r\n//   carbonEmissions: number;\r\n//   waterUsage: number;\r\n//   wasteGenerated: number;\r\n// }\r\n\r\n// // Dummy industry benchmarks for comparison\r\n// const industryBenchmarks = {\r\n//   carbonEmissions: 100, // Example value in kilo-tons\r\n//   waterUsage: 200,      // Example value in million-liters\r\n//   wasteGenerated: 50    // Example value in tons\r\n// };\r\n\r\n// // Function to add benchmarks to user data\r\n// const addBenchmarks = (data: MetricData[]) => {\r\n//   return data.map((entry) => ({\r\n//     ...entry,\r\n//     carbonEmissionsBenchmark: industryBenchmarks.carbonEmissions,\r\n//     waterUsageBenchmark: industryBenchmarks.waterUsage,\r\n//     wasteGeneratedBenchmark: industryBenchmarks.wasteGenerated,\r\n//   }));\r\n// };\r\n\r\n// const MetricChart: React.FC<{ metrics: MetricData[] }> = ({ metrics }) => {\r\n//   // Add benchmarks to each data point\r\n//   const dataWithBenchmarks = addBenchmarks(metrics);\r\n\r\n//   return (\r\n//     <ResponsiveContainer width=\"100%\" height={400}>\r\n//       <LineChart data={dataWithBenchmarks}>\r\n//         <CartesianGrid strokeDasharray=\"3 3\" />\r\n//         <XAxis dataKey=\"year\" />\r\n//         <YAxis />\r\n//         <Tooltip />\r\n//         <Legend />\r\n        \r\n//         {/* User's data lines */}\r\n//         <Line type=\"monotone\" dataKey=\"carbonEmissions\" stroke=\"#8884d8\" name=\"Carbon Emissions (User)\" />\r\n//         <Line type=\"monotone\" dataKey=\"waterUsage\" stroke=\"#82ca9d\" name=\"Water Usage (User)\" />\r\n//         <Line type=\"monotone\" dataKey=\"wasteGenerated\" stroke=\"#ffc658\" name=\"Waste Generated (User)\" />\r\n        \r\n//         {/* Industry benchmark lines with dashed styling */}\r\n//         <Line type=\"monotone\" dataKey=\"carbonEmissionsBenchmark\" stroke=\"#8884d8\" strokeDasharray=\"5 5\" name=\"Carbon Emissions (Benchmark)\" />\r\n//         <Line type=\"monotone\" dataKey=\"waterUsageBenchmark\" stroke=\"#82ca9d\" strokeDasharray=\"5 5\" name=\"Water Usage (Benchmark)\" />\r\n//         <Line type=\"monotone\" dataKey=\"wasteGeneratedBenchmark\" stroke=\"#ffc658\" strokeDasharray=\"5 5\" name=\"Waste Generated (Benchmark)\" />\r\n//       </LineChart>\r\n//     </ResponsiveContainer>\r\n//   );\r\n// };\r\n\r\n// export default MetricChart;\r\n\r\n\r\nimport React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\ninterface MetricData {\r\n  year: string;\r\n  month: string;\r\n  carbonEmissions: number;\r\n  waterUsage: number;\r\n  wasteGenerated: number;\r\n}\r\n\r\n// Dummy industry benchmarks for comparison\r\nconst industryBenchmarks = {\r\n  carbonEmissions: 100, // Example value in kilo-tons\r\n  waterUsage: 200,      // Example value in million-liters\r\n  wasteGenerated: 50    // Example value in tons\r\n};\r\n\r\n// Function to add benchmarks to user data\r\nconst addBenchmarks = (data: MetricData[]) => {\r\n  return data.map((entry) => ({\r\n    ...entry,\r\n    carbonEmissionsBenchmark: industryBenchmarks.carbonEmissions,\r\n    waterUsageBenchmark: industryBenchmarks.waterUsage,\r\n    wasteGeneratedBenchmark: industryBenchmarks.wasteGenerated,\r\n  }));\r\n};\r\n\r\n// Custom tooltip component\r\nconst CustomTooltip: React.FC<any> = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    const { month, year } = payload[0].payload; // Access month and year from the data\r\n    return (\r\n      <div style={{ backgroundColor: '#c2c8d2', padding: '5px', border: '1px solid #ccc' }}>\r\n        <p>{`Date: ${month}-${year}`}</p>\r\n        <p>{`Carbon Emissions: ${payload[0].value} kilo-tons`}</p>\r\n        <p>{`Water Usage: ${payload[1].value} million-liters`}</p>\r\n        <p>{`Waste Generated: ${payload[2].value} tons`}</p>\r\n        <p>{`Carbon Emissions Benchmark: ${payload[3].value} kilo-tons`}</p>\r\n        <p>{`Water Usage Benchmark: ${payload[4].value} million-liters`}</p>\r\n        <p>{`Waste Generated Benchmark: ${payload[5].value} tons`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst MetricChart: React.FC<{ metrics: MetricData[] }> = ({ metrics }) => {\r\n  // Add benchmarks to each data point\r\n  const dataWithBenchmarks = addBenchmarks(metrics);\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart data={dataWithBenchmarks}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"year\" />\r\n        <YAxis />\r\n        <Tooltip content={<CustomTooltip />} /> {/* Use custom tooltip */}\r\n        <Legend />\r\n        \r\n        {/* User's data lines */}\r\n        <Line type=\"monotone\" dataKey=\"carbonEmissions\" stroke=\"#8884d8\" name=\"Carbon Emissions (User)\" />\r\n        <Line type=\"monotone\" dataKey=\"waterUsage\" stroke=\"#82ca9d\" name=\"Water Usage (User)\" />\r\n        <Line type=\"monotone\" dataKey=\"wasteGenerated\" stroke=\"#ffc658\" name=\"Waste Generated (User)\" />\r\n        \r\n        {/* Industry benchmark lines with dashed styling */}\r\n        <Line type=\"monotone\" dataKey=\"carbonEmissionsBenchmark\" stroke=\"#8884d8\" strokeDasharray=\"5 5\" name=\"Carbon Emissions (Benchmark)\" />\r\n        <Line type=\"monotone\" dataKey=\"waterUsageBenchmark\" stroke=\"#82ca9d\" strokeDasharray=\"5 5\" name=\"Water Usage (Benchmark)\" />\r\n        <Line type=\"monotone\" dataKey=\"wasteGeneratedBenchmark\" stroke=\"#ffc658\" strokeDasharray=\"5 5\" name=\"Waste Generated (Benchmark)\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default MetricChart;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1371, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/components/ExportButtons.tsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// const ExportButtons: React.FC<{ metrics: any[] }> = ({ metrics }) => {\r\n//   const exportToCSV = () => {\r\n//     const headers = [\"Year\", \"Carbon Emissions\", \"Water Usage\", \"Waste Generated\"];\r\n//     const rows = metrics.map(({ year, carbonEmissions, waterUsage, wasteGenerated }) => [year, carbonEmissions, waterUsage, wasteGenerated]);\r\n//     const csvContent = [headers, ...rows].map(e => e.join(\",\")).join(\"\\n\");\r\n//     const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = \"sustainability_metrics.csv\";\r\n//     link.click();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={exportToCSV}>Export as CSV</button>\r\n//       {/* Add PDF export functionality here */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExportButtons;\r\n\r\n// import React from 'react';\r\n// import jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\n\r\n\r\n// const ExportButtons: React.FC<{ metrics: any[] }> = ({ metrics }) => {\r\n//   const exportToCSV = () => {\r\n//     const headers = [\"Year\", \"Carbon Emissions\", \"Water Usage\", \"Waste Generated\"];\r\n//     const rows = metrics.map(({ year, carbonEmissions, waterUsage, wasteGenerated }) => [\r\n//       year,\r\n//       carbonEmissions,\r\n//       waterUsage,\r\n//       wasteGenerated,\r\n//     ]);\r\n//     const csvContent = [headers, ...rows].map(e => e.join(\",\")).join(\"\\n\");\r\n//     const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n//     const url = URL.createObjectURL(blob);\r\n//     const link = document.createElement(\"a\");\r\n//     link.href = url;\r\n//     link.download = \"sustainability_metrics.csv\";\r\n//     link.click();\r\n//   };\r\n\r\n//   const exportToPDF = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.text(\"Sustainability Metrics\", 20, 10);\r\n//     const rows = metrics.map(({ year, carbonEmissions, waterUsage, wasteGenerated }) => [\r\n//       year,\r\n//       carbonEmissions,\r\n//       waterUsage,\r\n//       wasteGenerated,\r\n//     ]);\r\n//     doc.autoTable({\r\n//       head: [[\"Year\", \"Carbon Emissions\", \"Water Usage\", \"Waste Generated\"]],\r\n//       body: rows,\r\n//     });\r\n//     doc.save(\"sustainability_metrics.pdf\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"exportButtons\">\r\n//       <button onClick={exportToCSV}>Export as CSV</button>\r\n//       <button onClick={exportToPDF}>Export as PDF</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExportButtons;\r\n\r\n\r\nimport React from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\nconst ExportButtons: React.FC<{ metrics: any[] }> = ({ metrics }) => {\r\n  const exportToCSV = () => {\r\n    const headers = [\"Year\", \"Carbon Emissions\", \"Water Usage\", \"Waste Generated\"];\r\n    const rows = metrics.map(({ year, carbonEmissions, waterUsage, wasteGenerated }) => [\r\n      year,\r\n      carbonEmissions,\r\n      waterUsage,\r\n      wasteGenerated,\r\n    ]);\r\n    const csvContent = [headers, ...rows].map(e => e.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = \"sustainability_metrics.csv\";\r\n    link.click();\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Sustainability Metrics\", 20, 10);\r\n    const rows = metrics.map(({ year, carbonEmissions, waterUsage, wasteGenerated }) => [\r\n      year,\r\n      carbonEmissions,\r\n      waterUsage,\r\n      wasteGenerated,\r\n    ]);\r\n    doc.autoTable({\r\n      head: [[\"Year\", \"Carbon Emissions\", \"Water Usage\", \"Waste Generated\"]],\r\n      body: rows,\r\n    });\r\n    doc.save(\"sustainability_metrics.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"exportButtons\">\r\n      <button onClick={exportToCSV}>Export as CSV</button>\r\n      <button onClick={exportToPDF}>Export as PDF</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButtons;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;AAE7B,yEAAyE;AACzE,gCAAgC;AAChC,sFAAsF;AACtF,gJAAgJ;AAChJ,8EAA8E;AAC9E,iEAAiE;AACjE,6CAA6C;AAC7C,gDAAgD;AAChD,uBAAuB;AACvB,oDAAoD;AACpD,oBAAoB;AACpB,OAAO;AAEP,aAAa;AACb,YAAY;AACZ,6DAA6D;AAC7D,kDAAkD;AAClD,aAAa;AACb,OAAO;AACP,KAAK;AAEL,gCAAgC;AAEhC,6BAA6B;AAC7B,6BAA6B;AAC7B,4BAA4B;AAG5B,yEAAyE;AACzE,gCAAgC;AAChC,sFAAsF;AACtF,4FAA4F;AAC5F,cAAc;AACd,yBAAyB;AACzB,oBAAoB;AACpB,wBAAwB;AACxB,UAAU;AACV,8EAA8E;AAC9E,iEAAiE;AACjE,6CAA6C;AAC7C,gDAAgD;AAChD,uBAAuB;AACvB,oDAAoD;AACpD,oBAAoB;AACpB,OAAO;AAEP,gCAAgC;AAChC,+BAA+B;AAC/B,kDAAkD;AAClD,4FAA4F;AAC5F,cAAc;AACd,yBAAyB;AACzB,oBAAoB;AACpB,wBAAwB;AACxB,UAAU;AACV,sBAAsB;AACtB,gFAAgF;AAChF,oBAAoB;AACpB,UAAU;AACV,8CAA8C;AAC9C,OAAO;AAEP,aAAa;AACb,sCAAsC;AACtC,6DAA6D;AAC7D,6DAA6D;AAC7D,aAAa;AACb,OAAO;AACP,KAAK;AAEL,gCAAgC;;;;;AAIhC;AACA;;;;AAEA,MAAM,gBAA8C,CAAC,EAAE,OAAO,EAAE;IAC9D,MAAM,cAAc;QAClB,MAAM,UAAU;YAAC;YAAQ;YAAoB;YAAe;SAAkB;QAC9E,MAAM,OAAO,QAAQ,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,UAAU,EAAE,cAAc,EAAE,GAAK;gBAClF;gBACA;gBACA;gBACA;aACD;QACD,MAAM,aAAa;YAAC;eAAY;SAAK,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC;QACjE,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAAW;QACvD,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,KAAK,QAAQ,GAAG;QAChB,KAAK,KAAK;IACZ;IAEA,MAAM,cAAc;QAClB,MAAM,MAAM,IAAI,8FAAA,CAAA,UAAK;QACrB,IAAI,IAAI,CAAC,0BAA0B,IAAI;QACvC,MAAM,OAAO,QAAQ,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,UAAU,EAAE,cAAc,EAAE,GAAK;gBAClF;gBACA;gBACA;gBACA;aACD;QACD,IAAI,SAAS,CAAC;YACZ,MAAM;gBAAC;oBAAC;oBAAQ;oBAAoB;oBAAe;iBAAkB;aAAC;YACtE,MAAM;QACR;QACA,IAAI,IAAI,CAAC;IACX;IAEA,qBACE,uIAAC;QAAI,WAAU;;0BACb,uIAAC;gBAAO,SAAS;0BAAa;;;;;;0BAC9B,uIAAC;gBAAO,SAAS;0BAAa;;;;;;;;;;;;AAGpC;uCAEe"}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1528, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aaroh/Projects/interactive_sustainability_dashboard/frontend/src/pages/dashboard.tsx"],"sourcesContent":["import Navbar from '../components/navbar';\r\nimport styles from '../styles/dashboard.module.css';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DeleteDataForm from '../components/DeleteDataForm';\r\nimport ViewRangeForm from '../components/ViewRangeForm';\r\nimport InputForm from '../components/InputForm';\r\nimport MetricChart from '../components/MetricChart';\r\nimport ExportButtons from '../components/ExportButtons';\r\nimport { MetricData } from '../types/MetricData';\r\nconst DashboardPage: React.FC = () => {\r\n  const router = useRouter();\r\n  const [metrics, setMetrics] = useState<MetricData[]>([]);\r\n  const [filteredMetrics, setFilteredMetrics] = useState<MetricData[]>([]);\r\n  \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      router.push('/login'); // Redirect if not logged in\r\n    }\r\n  }, [router]);\r\n\r\n  const handleFormSubmit = (newData: MetricData) => {\r\n    const updatedMetrics = [...metrics, newData];\r\n    setMetrics(updatedMetrics);\r\n    localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n  };\r\n\r\n  const handleDeleteData = (start: string, end: string) => {\r\n    const updatedMetrics = metrics.filter((metric) => {\r\n      const metricDate = `${metric.year}-${metric.month}`;\r\n      return metricDate < start || metricDate > end;\r\n    });\r\n    setMetrics(updatedMetrics);\r\n    localStorage.setItem('metrics', JSON.stringify(updatedMetrics));\r\n  };\r\n\r\n  const handleFilterData = (start: string, end: string) => {\r\n    const filteredMetrics = metrics.filter((metric) => {\r\n      const metricDate = `${metric.year}-${metric.month}`;\r\n      return metricDate >= start && metricDate <= end;\r\n    });\r\n    setFilteredMetrics(filteredMetrics);\r\n  };\r\n  // New handler to delete all data\r\n  const handleDeleteAllData = () => {\r\n    setMetrics([]);\r\n    localStorage.removeItem('metrics'); // Clear all metrics from localStorage\r\n  };\r\n\r\n// return (\r\n//   <div className={styles.dashboardContainer}>\r\n//     <Navbar />\r\n//     <div className={styles.container}>\r\n//       <div className={styles.topButtons}>\r\n//         <button\r\n//           onClick={() => {\r\n//             localStorage.removeItem('token');\r\n//             router.push('/login'); // Redirect to login page\r\n//           }}\r\n//           className={styles.logoutButton}\r\n//         >\r\n//           Logout\r\n//         </button>\r\n//         <ExportButtons metrics={metrics} />\r\n//       </div>\r\n//       <InputForm onSubmit={handleFormSubmit} />\r\n//       <DeleteDataForm onDelete={handleDeleteData} onDeleteAll={handleDeleteAllData} />\r\n//       <ViewRangeForm onFilter={handleFilterData} />\r\n//       <div className={styles.metrics}>\r\n//         <MetricChart metrics={filteredMetrics.length > 0 ? filteredMetrics : metrics} />\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// );\r\n// };\r\n\r\n// export default DashboardPage;\r\n\r\n\r\n// Inside dashboard.tsx\r\n\r\nreturn (\r\n  <div className={styles.dashboardContainer}>\r\n    <Navbar />\r\n    <div className={styles.container}>\r\n      <div className={styles.topButtons}>\r\n      <ExportButtons metrics={metrics} />\r\n        <button\r\n          onClick={() => {\r\n            localStorage.removeItem('token');\r\n            router.push('/login'); // Redirect to login page\r\n          }}\r\n          className={styles.logoutButton}\r\n        >\r\n          Logout\r\n        </button>\r\n        \r\n      </div>\r\n\r\n      {/* Form Section */}\r\n      <div className={styles.formSection}>\r\n        <InputForm onSubmit={handleFormSubmit} />\r\n        <DeleteDataForm onDelete={handleDeleteData} onDeleteAll={handleDeleteAllData} />\r\n        <ViewRangeForm onFilter={handleFilterData} />\r\n      </div>\r\n\r\n      <div className={styles.metrics}>\r\n        <MetricChart metrics={filteredMetrics.length > 0 ? filteredMetrics : metrics} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default DashboardPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}